$border-color: grey;

$type-colors: (
  bug: #6fb90050,
  dark: #4a445550,
  dragon: #1870b950,
  electric: #ffce2b50,
  fairy: #f28cd650,
  fighting: #d14b5f50,
  fire: #fa8e2150,
  flying: #6b86d550,
  ghost: #7a71c350,
  grass: #3ab55850,
  ground: #cd672650,
  ice: #7cdfda50,
  normal: #95958f50,
  poison: #d747c250,
  psychic: #fc595550,
  rock: #c6b36550,
  steel: #26798d50,
  water: #58a7db50,
  hidden: #9c47ef50,
);

@mixin dark-theme {
  background-color: #222;
  color: #eee;

  #use-light-theme {
    display: flex;
  }

  #use-dark-theme {
    display: none;
  }
}

body {
  font-family: "Lato", sans-serif;
  padding: 2rem;

  #use-light-theme {
    display: none;
  }

  #use-dark-theme {
    display: flex;
  }

  &:not(.light) {
    @media (prefers-color-scheme: dark) {
      @include dark-theme;
    }
  }

  &.dark {
    @include dark-theme;
  }

  &:not(.show-deltas) {
    .delta {
      display: none;
    }
  }
}

.container {
  max-width: 1200px;
  margin: auto;
}

h1 {
  margin-top: 0;
  font-size: 2rem;
  img {
    height: 2rem;
  }
}

.theme-button {
  display: flex;
  align-items: center;
  padding: 8px;

  background: #eee;
  border: 1px solid #a9a9a9;
  outline: none;
  box-shadow: none;

  cursor: pointer;

  &:focus,
  &:hover,
  &:active {
    background-color: #ddd;
    border-color: #808080;
  }

  img {
    height: 1em;
    margin-right: 8px;
  }
}

.setting {
  margin-bottom: 1rem;
}

input#search {
  position: fixed;
  bottom: 40px;
  right: 40px;

  font-size: 1.5rem;
  padding: 10px;
  border-radius: 20px;

  border: 2px solid #a9a9a9;
  outline: none;
  box-shadow: none;

  &:focus {
    border-color: #808080;
  }
}

h2 {
  margin: 1rem 0 0.5rem 0;
  padding-top: 1rem;
}

table {
  border-collapse: collapse;

  th,
  td {
    padding: 4px 10px;
    text-align: center;

    img.type {
      height: 1.2em;
      margin-bottom: -0.2em;
    }

    .delta {
      font-size: 0.7rem;
    }
  }

  tr:first-child {
    th {
      &:first-child {
        font-size: 1.2rem;
      }
    }

    @each $type, $color in $type-colors {
      th.#{$type} {
        background-color: $color;
        border-bottom: 1px solid opacify($color, 1);
      }
    }
  }

  tr:not(:first-child) {
    @each $type, $color in $type-colors {
      &.#{$type} {
        th,
        td {
          background-color: $color;
        }
      }
    }
  }
}
